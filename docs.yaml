---
swagger: "2.0"
info:
  description: Vodex.ai Telecalling Service API Documentation
  version: 1.0.0
  title: Vodex API's
  termsOfService: http://swagger.io/terms/
  contact:
    email: sameer@lilchirp.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
schemes:
  - https
host: lilchirp-prod-api.herokuapp.com
basePath: /api
paths:
  /token:
    post:
      tags:
      - Token
      summary: Token Generation and user Validation
      description: here we need to pass the "email" and "password" in the payload and it will provide you with the token and unique user Id.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Sample Data
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      responses:
        "200":
          description: Success
          schema:
             type: object
             properties:
              userId:
                type: string
              token:
                type: string
             example:
                userId: "alyz"
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0aW1lIjoiV2VkIE1hciAwMSAyMDIzIDE1OjA2OjQzIEdNVCswNTMwIChJbmRpYSBTdGFuZGFyZCBUaW1lKSIsInVzZXJJZCI6eyJ1c2VySWQiOiJONG11eFZCTjdxTnNhQzl1enBuQkd5a"

        "520":
          description: error
          schema:
             type: object
             properties:
              code:
                type: integer
              msg:
                type: string
             example:
                code: 520
                msg: "\"email\" must be a valid email"


        "502":
          description: error
          schema:
             type: object
             properties:
              code:
                type: integer
              msg:
                type: string
             example:
                code: 502
                msg: "something went wrong while creating auth token"


        "403":
          description: error
          schema:
             type: object
             properties:
              code:
                type: integer
              msg:
                type: string
             example:
                code: 403
                msg: "invalid creds"


      x-swagger-router-controller: tokenController


  /refresh-token:
    post:
      tags:
      - Token
      summary: Refresh Token 
      description: In case our token got invalid, we can call this API for new refresh token, here we need two fields "token" i.e. your expired token and "refresh_token" - this will be provided by the API admin.
      operationId: refreshToken
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: payload
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      responses:
        "200":
          description: Success
          schema:
             type: object
             properties:
              status:
                type: integer
              token:
                type: string
             example:
                status: 200
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0aW1lIjoiV2VkIE1hciAwMSAyMDIzIDE1OjA2OjQzIEdNVCswNTMwIChJbmRpYSBTdGFuZGFyZCBUaW1lKSIsInVzZXJJZCI6eyJ1c2VySWQiOiJONG11eFZCTjdxTnNhQzl1enBuQkd5a"

        "502":
          description: if invalid token is passed
          schema:
             type: object
             properties:
              status:
                type: integer
              msg:
                type: string
             example:
                status: 502
                msg: "invalid token"

        "403":
          description: if invalid refresh_token is passed
          schema:
             type: object
             properties:
              status:
                type: integer
              msg:
                type: string
             example:
                status: 403
                msg: "invalid refresh token"
 
 
  /trigger-call:
    post:
      tags:
      - Call Trigger
      summary: trigger individual calls on mobile number
      description: with this API we can directly call any number, given all the setups has been done manually in the vodex account to trigger the call, it will automatically create audience list, campaign and trigger campaign runs to execute call on the number.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: need to pass token we received at "/token" API and pass it in format "Bearer eyxzhy..."
        required: true
        type: string
      - in: body
        name: body
        description: payload
        required: true
        schema:
          $ref: '#/definitions/trigger_call'
      responses:
        "200":
          description: Success
          schema:
             type: object
             properties:
              status:
                type: integer
              msg:
                type: string
              campaignRunId:
                type: string
              timeStamp:
                type: string
             example:
              status: 200
              msg: "campaign run started successfully"
              campaignRunId: "Ajb8JoJ5WMrMAfPGW1U2"
              timeStamp: "Wed, Mar 1, 2023 9:58 PM"
        "507":
          description: if greeting recording is not present in the account
          schema:
             type: object
             properties:
              status:
                type: integer
              errMsg:
                type: string
             example:
                status: 507
                errMsg: "Please add Greeting or Invitation recordings"


        "403":
          description: if invalid or expired token is passed
          schema:
             type: object
             properties:
              status:
                type: integer
              msg:
                type: string
             example:
                status: 403
                msg: "unauthorised"


 
  /run-campaign-details/{campaignrunId}:
    get:
      tags:
      - Run Campaign
      summary: GET Run Campaign Details
      description: In this API, you can get the status and details of all calls which has been triggered on a campaign at a perticular time, we just need to provide the campaign run Id corresponding to that time. 
      operationId: runCampaignDetailsController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_token
        required: true
        type: string
      - name: campaignrunId
        in: path
        description: The Campaign Run Id.
        required: true
        type: string
        minimum: 1
      responses:
        "200":
          description: Success
          schema:
             type: object
             properties:
              status:
                type: integer
              data:
                type: array
                items:
                  type: object
                  properties:
                    callCode:
                      type: string
                    phone:
                      type: string
                    unit:
                      type: string
                    duration:
                      type: string
                    newCost:
                      type: string
                    cost:
                      type: string
                    callRecordingUrl:
                      type: string
                    currency:
                      type: string
                    callStatus:
                      type: string
                    price:
                      type: string

             example:
              status: 200
              data: [
                {
                  callCode: "campaign run started successfully",
                  phone: "Ajb8JoJ5WMrMAfPGW1U2",
                  unit: "Wed, Mar 1, 2023 9:58 PM",
                  duration: "Wed, Mar 1, 2023 9:58 PM",
                  newCost: "Wed, Mar 1, 2023 9:58 PM",
                  cost: "Wed, Mar 1, 2023 9:58 PM",
                  callRecordingUrl: "Wed, Mar 1, 2023 9:58 PM",
                  currency: "Wed, Mar 1, 2023 9:58 PM",
                  callStatus: "Wed, Mar 1, 2023 9:58 PM",
                  price: "Wed, Mar 1, 2023 9:58 PM"
                }
              ]

        "507":
          description: if campaign run Id is not provided
          schema:
             type: object
             properties:
              status:
                type: integer
              errMsg:
                type: string
             example:
                status: 507
                errMsg: "Please provide campaign run Id"


        "403":
          description: if invalid or expired token is passed
          schema:
             type: object
             properties:
              status:
                type: integer
              msg:
                type: string
             example:
                status: 403
                msg: "unauthorised"

  /excel-export/{campaignrunId}:
    get:
      tags:
      - Excel
      summary: excel export of Campaign Run Details
      description: excel export of Campaign Run Details
      operationId: exportExcelController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_token
        required: true
        type: string
      - name: campaignrunId
        in: path
        description: The Campaign Run Id.
        required: true
        type: string
        minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: runCampaignController
  /audience-excel:
    post:
      tags:
      - Excel
      summary: Audience upload through Excel File
      description: Audience upload through Excel File
      operationId: createAudienceExcelController
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_token
        required: true
        type: string
      - name: file
        in: formData
        description: The file to upload.
        required: true
        type: file
      - name: audienceListName
        in: formData
        description: Audience List Name.
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: audienceController
  /audience/{id}:
    get:
      tags:
      - Audience
      summary: get Audience by Id
      description: get Audience
      operationId: getAudienceController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      - name: id
        in: path
        description: The user ID.
        required: true
        type: string
        minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: audienceController
    put:
      tags:
      - Audience
      summary: Edit Audience List
      description: Edit Audience
      operationId: updateAudienceController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      - name: id
        in: path
        description: The user ID.
        required: true
        type: string
        minimum: 1
      - in: body
        name: body
        description: payload
        required: true
        schema:
          $ref: '#/definitions/AudienceList'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: audienceController
    delete:
      tags:
      - Audience
      summary: delete Audience List by Id
      description: delete Audience
      operationId: deleteAudienceController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      - name: id
        in: path
        description: The user ID.
        required: true
        type: string
        minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: audienceController
  /audience:
    get:
      tags:
      - Audience
      summary: get all Audience
      description: get Audience
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: audienceController
    post:
      tags:
      - Audience
      summary: create Audience
      description: create Audience
      operationId: createAudienceController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      - in: body
        name: body
        description: payload
        required: true
        schema:
          $ref: '#/definitions/AudienceList'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: audienceController
  /save-filtered-campaign:
    post:
      tags:
      - Custom API
      summary: campaign created by filtered call
      description: campaign created by filtered call
      operationId: createAudienceAndCampaignController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      - in: body
        name: body
        description: payload
        required: true
        schema:
          $ref: '#/definitions/AudienceList'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: customController
  /recordings:
    get:
      tags:
      - Recordings
      summary: get all Recordings
      description: get Recordings
      operationId: getRecordingController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: recordingController
    post:
      tags:
      - Recordings
      summary: create Audience
      description: create Audience
      operationId: createRecordingController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      - in: body
        name: body
        description: payload
        required: true
        schema:
          $ref: '#/definitions/recordings'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: recordingController
  /user:
    post:
      tags:
      - User
      summary: Create User
      description: Create new user
      operationId: createUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: payload
        required: true
        schema:
          $ref: '#/definitions/create'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: userController
  /campaigns/{id}:
    get:
      tags:
      - Campaigns
      summary: get Campaign by Id
      description: get Campaign
      operationId: getCampaignController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      - name: id
        in: path
        description: The user ID.
        required: true
        type: string
        minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: campaignController
    delete:
      tags:
      - Campaigns
      summary: Delete Campaign by Id
      description: Delete Campaign by Id
      operationId: deleteCampaignController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      - name: id
        in: path
        description: The user ID.
        required: true
        type: string
        minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: campaignController
  /campaigns:
    get:
      tags:
      - Campaigns
      summary: get Campaign
      description: get all Campaign
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: campaignController
    post:
      tags:
      - Campaigns
      summary: create Campaign
      description: create Campaign
      operationId: createCampaignController
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: auth_key
        required: true
        type: string
      - in: body
        name: body
        description: payload
        required: true
        schema:
          $ref: '#/definitions/campaign'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: campaignController
securityDefinitions:
  Bearer:
    description: |
      for accessing the API, a valid JWT token must be passed
    type: apiKey
    name: Authorization
    in: header
definitions:
  googleid:
    type: object
    properties:
      id:
        type: string
  refresh_token:
    type: object
    properties:
      token:
        type: string
      refresh_token:
        type: string
  trigger_call:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      mobileNumber:
        type: string
  recordings:
    type: object
    properties:
      projectId:
        type: string
      projectName:
        type: string
      recordingName:
        type: string
      recordingUrl:
        type: string
      tag:
        type: string
      triggerKeywords:
        type: string
  SampleAPi:
    type: object
  campaign:
    type: object
    properties:
      campaignName:
        type: string
      audienceListId:
        type: array
        items:
          type: string
      project:
        type: string
      botPlatform:
        type: string
  accountbasedGetRunCampaignDetails:
    type: object
    properties:
      filterdata:
        type: array
        items:
          type: string
  create:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      confirmPassword:
        type: string
      countryCode:
        type: string
  runCampaign:
    type: object
    properties:
      listname:
        type: string
      campaignrunid:
        type: string
      apikey:
        type: string
      ruleId:
        type: string
      accountId:
        type: string
      botPlatform:
        type: string
      unit:
        type: string
      currency:
        type: string
  token:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  AudienceList:
    type: object
    properties:
      audienceListName:
        type: string
      sourceType:
        type: string
      audienceList:
        type: array
        items:
          $ref: '#/definitions/AudienceList_audienceList'
  ApiResponse:
    type: object
    properties:
      userId:
        type: string
      token:
        type: string
    example:
      userId: 0
      token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0aW1lIjoiV2VkIE1hciAwMSAyMDIzIDE1OjA2OjQzIEdNVCswNTMwIChJbmRpYSBTdGFuZGFyZCBUaW1lKSIsInVzZXJJZCI6eyJ1c2VySWQiOiJONG11eFZCTjdxTnNhQzl1enBuQkd5a"
        
  ErrorResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
  AudienceList_audienceList:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
